/*Copyright (c) 2008 NascomASLib Contributors.  See:    http://code.google.com/p/nascomaslibPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the "Software"), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included inall copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS INTHE SOFTWARE.*/package be.nascom.flash.util{	 	/**	 * The AgeCheckerUtil class checks whether a user's age is older than the age to check against..	 * 	 */ 	public class AgeCheckerUtil 	{		/**		 * Checks whether the user's age is permissible or not.  The month and day can be passed in with leading zeros or not. 		 * The year should be passed in as the full year (ex: 1983).		 * 		 * @param ageToCheck The age you want to test against		 * @param month The user's input month		 * @param day The user's input day		 * @param year The user's input year		 * 		 * @return A boolean value that states whether the age check has passed or not.		 */		public static function checkAge(ageToCheck:int, month:int, day:int, year:int):Boolean 		{			var todayDate:Date = new Date();			var currentMonth:int = (todayDate.getMonth() + 1);			var currentDay:int = todayDate.getDate();			var currentYear:int = todayDate.getFullYear();						var userMonth:int = month;			var userDay:int = day;			var userYear:int = year;						var yearDiff:int = (currentYear - userYear);						if (yearDiff == ageToCheck) 			{ 				// AGE IS EQUAL to VALID AGE ... need to check month and day				var monthDiff:int = (currentMonth - userMonth);								if (monthDiff == 0) 				{ 					// MONTH IS EQUAL ... need to check day					var dayDiff:int = currentDay - userDay;										if (dayDiff >= 0) 					{ 						// DAY IS EQUAL OR GREATER .. PASS						return true;					}					else 					{ 						// DAY INVALID ... too young						return false;					}										}				else if (monthDiff < 0) 				{ 					// MONTH INVALID ... too young					return false;				}				else 				{ 					// AGE PASS					return true;				}			} 			else if (yearDiff < ageToCheck) 			{ 				// YEAR INVALID ... too young				return false;			}			else 			{ 				// OVER AGE in YEARS				return true;			}		}	}}